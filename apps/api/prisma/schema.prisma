// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Sample {
  id        Int      @id @default(autoincrement())
  name      String
  code      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("samples") // if you want to use snake_case format
}

model User {
  UserId           String   @id @default(cuid())
  Username         String
  Name             String
  Email            String   @unique
  Password         String
  Type             UserType
  Status           UserStatus
  ReferralCode     String?
  SumPointAmount   Int      @default(0)
  CountOfTransId   Int      @default(0)

  referrals        Referral[]
  pointsTrx        PointsTrx[]

  ReferralUsed ReferralUsed[]
}

enum UserType {
  Customer
  Organizer
}

enum UserStatus {
  Active
  Inactive
}

model Referral {
  ReferralId      String   @id @default(cuid())
  ReferralCode    String
  UserId          String
  CountUsed       Int      @default(0)
  CreateDate      DateTime @default(now())
  Status          String

  user            User     @relation(fields: [UserId], references: [UserId])
}

model ReferralUsed {
  ReferralUsedId  String   @id @default(cuid())
  ReferralCode    String
  UsedDate        DateTime @default(now())
  UsedBy          String @unique

  user            User     @relation(fields: [UsedBy], references: [UserId])

  PointsTrx PointsTrx[] @relation(name: "PointsTrxToReferralUsed")
}

model PointsTrx {
  PointsId        String   @id @default(cuid())
  UserId          String
  ReferralCode    String?
  AddedDate       DateTime @default(now())
  AddedBy         String @unique
  ExpireDate      DateTime
  PointAmount     Int
  
  user            User     @relation(fields: [UserId], references: [UserId])
  ref ReferralUsed @relation(name: "PointsTrxToReferralUsed", fields: [AddedBy], references: [UsedBy])
}
